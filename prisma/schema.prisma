// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  emailVerified DateTime? @map("email_verified")
  password  String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  accounts      Account[]
  sessions      Session[]
}

// if changes are made - npx prisma generate to update the prisma client
// npx prisma db push to update the database

model Star {
  id                   String       @id @default(auto()) @map("_id") @db.ObjectId
  star_id              Int          @unique
  name                 String
  maori_name           String?
  designation          String?
  asterism             String?
  constellation        String?
  maori_constellation  String?
  magnitude            Float
  bv_index             Float
  geometry             Json
  geometry_type        String
  geometry_coordinates Float[]
  description          String?
  isNamed              Boolean      @default(false)
  category             String?      @default("star")
}

model Planet {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  img      String
  trajectory Boolean
  H        Float
  sym      String
  maori_name String?
  description String?
  category String? @default("planet")
}

model Constellation {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  constellation_id String    
  name         String
  desig        String
  rank         Int
  display      Float[]
  geometry     Json
  maori_name   String?
  description  String?
  category     String?   @default("constellation")
}

model Asterism {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  asterism_id String 
  name String 
  loc    Float[] 
  p      Int   
  geometry Json  
  maori_name String?
  description String?
  category String @default("asterism")
}





